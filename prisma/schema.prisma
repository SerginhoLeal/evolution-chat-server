// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  number     String   @unique
  created_at DateTime @default(now())

  instances     Instance[] @relation("user_relation")
  first_member  Chat[]     @relation("first_member")
  second_member Chat[]     @relation("second_member")

  @@map("users")
}

model Instance {
  id            String @id @default(uuid())
  user_id       String
  instance_name String @unique

  chat Chat[] @relation("instance")
  user User?  @relation("user_relation", fields: [user_id], references: [id], onDelete: Cascade)

  @@map("instances")
}

model Chat {
  id               String   @id @default(cuid())
  instance_id      String
  first_member_id  String
  second_member_id String
  created_at       DateTime @default(now())

  messages Message[]

  instance      Instance @relation("instance", fields: [instance_id], references: [id], onDelete: Cascade)
  first_member  User     @relation("first_member", fields: [first_member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  second_member User     @relation("second_member", fields: [second_member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  // @@index([first_member_id, second_member_id, instance_id])
  @@map("chats")
}

model Message {
  id         String   @id @default(cuid())
  chat_id    String
  created_at DateTime @default(now())

  message Chat @relation(fields: [chat_id], references: [id], onDelete: Cascade)

  @@map("messages")
}
